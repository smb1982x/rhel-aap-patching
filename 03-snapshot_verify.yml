---
# JOB TEMPLATE NOTE:
# - Expects snapshot_success_hosts and snapshot_name_expected from previous workflow step
# - Verifies snapshots exist before proceeding with patching

- name: Validate hosts available for snapshot verification
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Check if snapshot creation produced any successful hosts
      fail:
        msg: "No hosts available for snapshot verification - snapshot_success_hosts is empty"
      when: snapshot_success_hosts | default([]) | length == 0

    - name: Verify snapshot name is available
      fail:
        msg: "No snapshot name available for verification - snapshot_name_expected is undefined"
      when: snapshot_name_expected is not defined

    - name: Create dynamic inventory group for snapshot verification
      add_host:
        hostname: "{{ item }}"
        groups: "verify_targets"
        vm_folder: "{{ vm_folder_map[item] | default('') }}"
        vm_name_resolved: "{{ vm_name_map[item] | default(item) }}"
      loop: "{{ snapshot_success_hosts | default([]) }}"

- name: Verify snapshot exists by name
  hosts: verify_targets
  gather_facts: false
  vars:
    vmware_validate_certs: "{{ vmware_validate_certs | default(true) }}"
  tasks:
    - name: Refresh VM folder/name information from vCenter
      community.vmware.vmware_guest_info:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: "{{ vmware_validate_certs }}"
        datacenter: "{{ datacenter_name }}"
        name: "{{ vm_name_resolved | default(inventory_hostname) }}"
      register: vm_info_refresh
      delegate_to: localhost
      failed_when: false

    - name: Get current snapshot list for VM
      community.vmware.vmware_guest_snapshot_info:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: "{{ vmware_validate_certs }}"
        datacenter: "{{ datacenter_name }}"
        folder: "{{ vm_info_refresh.instance.hw_folder | default(vm_folder) }}"
        name: "{{ vm_info_refresh.instance.hw_name | default(vm_name_resolved) }}"
      register: snapinfo
      delegate_to: localhost
      failed_when: false
      when: 
        - not (vm_info_refresh.failed | default(false))
        - vm_info_refresh.instance is defined

    - name: Check if expected snapshot exists
      set_fact:
        snapshot_found: >-
          {{
            not (snapinfo.failed | default(false)) and
            snapinfo.guest_snapshots is defined and
            snapinfo.guest_snapshots.snapshots | default([]) | selectattr('name','equalto', snapshot_name_expected) | list | length > 0
          }}
      when: snapinfo is defined

    - name: Record successful verification results
      set_stats:
        data:
          verify_success_hosts: "{{ verify_success_hosts | default([]) + [inventory_hostname] }}"
        aggregate: true
        per_host: false
      when: 
        - snapshot_found | default(false)

    - name: Record failed verification results
      set_stats:
        data:
          verify_failed_hosts: "{{ verify_failed_hosts | default([]) + [inventory_hostname] }}"
          verify_failure_reasons: >-
            {{
              verify_failure_reasons | default({}) | combine({
                inventory_hostname: 'Snapshot not found: ' ~ snapshot_name_expected if snapinfo is defined else 'Failed to query snapshots'
              })
            }}
        aggregate: true
        per_host: false
      when: 
        - not (snapshot_found | default(false))

    - name: Display verification results for this host
      debug:
        msg: |
          Host: {{ inventory_hostname }}
          VM Info Refresh: {{ 'SUCCESS' if not (vm_info_refresh.failed | default(false)) else 'FAILED' }}
          Snapshot Query: {{ 'SUCCESS' if not (snapinfo.failed | default(false)) else 'FAILED' }}
          Expected Snapshot: {{ snapshot_name_expected }}
          Snapshot Found: {{ snapshot_found | default(false) }}
          {% if not (snapshot_found | default(false)) %}
          Available Snapshots: {{ (snapinfo.guest_snapshots.snapshots | default([]) | map(attribute='name') | list) if snapinfo is defined else 'Unable to query' }}
          {% endif %}

- name: Verification phase summary
  hosts: localhost
  gather_facts: false
  run_once: true
  tasks:
    - name: Display verification summary
      debug:
        msg: |
          ========================================
          VERIFICATION PHASE COMPLETED
          ========================================
          Target Hosts: {{ snapshot_success_hosts | default([]) | length }}
          Verified: {{ verify_success_hosts | default([]) | length }}
          Failed: {{ verify_failed_hosts | default([]) | length }}
          Success Rate: {{ ((verify_success_hosts | default([]) | length) * 100.0 / (snapshot_success_hosts | default([]) | length)) | round(1) }}%
          Expected Snapshot: {{ snapshot_name_expected | default('Not defined') }}
          ========================================
          Verified Hosts: {{ verify_success_hosts | default([]) | join(', ') }}
          Failed Hosts: {{ verify_failed_hosts | default([]) | join(', ') }}
          ========================================